name: CI/CD to Google Compute Engine

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    name: Deploy to GCE
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      GCE_INSTANCE: instance-20240529-070416

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: python -m unittest discover tests

    - name: Setup gcloud CLI
      uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Configure gcloud Auth
      run: |
        echo '${{ secrets.GCP_SA_KEY }}' | base64 -d > /tmp/sa_key.json
        gcloud auth activate-service-account --key-file=/tmp/sa_key.json
        gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
    - name: Debug Base64
      run: |
        echo "First 10 characters of GCP_SA_KEY:"
        echo '${{ secrets.GCP_SA_KEY }}' | cut -c1-10
        echo "Attempting to decode:"
        echo '${{ secrets.GCP_SA_KEY }}' | base64 -d | head -n 1
    - name: Get instance zone
      run: |
        ZONE=$(gcloud compute instances list --filter="name=${{ env.GCE_INSTANCE }}" --format="get(zone)" --quiet)
        echo "GCE_INSTANCE_ZONE=$ZONE" >> $GITHUB_ENV

    - name: Configure SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.GCP_SSH_PRIVATE_KEY }}" > ~/.ssh/google_compute_engine
        chmod 600 ~/.ssh/google_compute_engine
        echo "${{ secrets.GCP_SSH_PUBLIC_KEY }}" > ~/.ssh/google_compute_engine.pub

    - name: Deploy to Compute Engine
      run: |
        gcloud compute scp --recurse --zone=${{ env.GCE_INSTANCE_ZONE }} ./* ${{ env.GCE_INSTANCE }}:/tmp/telegram-bot-temp
        gcloud compute ssh --zone=${{ env.GCE_INSTANCE_ZONE }} ${{ env.GCE_INSTANCE }} --command="
          sudo rm -rf /home/cruz/telegram-bot
          sudo mv /tmp/telegram-bot-temp /home/cruz/telegram-bot
          sudo chown -R cruz:cruz /home/cruz/telegram-bot
          cd /home/cruz/telegram-bot &&
          sudo docker build -t telegram-bot . &&
          sudo docker stop telegram-bot-container || true &&
          sudo docker rm telegram-bot-container || true &&
          sudo docker run -d --name telegram-bot-container \
            -e TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }} \
            -e GOOGLE_SPREADSHEET_ID=${{ secrets.GOOGLE_SPREADSHEET_ID }} \
            telegram-bot
        "